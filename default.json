{
  "automerge": false,
  "branchPrefix": "renovate/",
  "extends": [
    "group:monorepos",
    "group:recommended"
  ],
  "ignoreUnstable": true,
  "lockFileMaintenance": {
    "enabled": true,
    "automerge": true
  },
  "packageRules": [
    {
      "matchDatasources": ["docker"],
      "matchDepPatterns": ["^python$"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<prerelease>[^.-]+)?(-(?<compatibility>.*))?$"
    },
    {
      "matchDatasources": ["github-tags"],
      "matchDepPatterns": ["^AleksaC/hadolint-py$", "^shellcheck-py/shellcheck-py$"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(\\.(?<build>\\d+)?$"
    },
    {
      "matchManagers": ["poetry"],
      "versioning": "poetry"
    },
    {
      "matchDatasources": ["orb"],
      "rangeStrategy": "replace",
      "patch": {
        "enabled": false
      }
    },
    {
      "matchManagers": ["poetry"],
      "matchDepTypes": ["dependencies"],
      "matchDepPatterns": ["^python$"],
      "rangeStrategy": "widen"
    },
    {
      "matchDepTypes": ["build-system.requires"],
      "rangeStrategy": "widen"
    },
    {
      "matchDepTypes": ["dev", "devDependencies"],
      "rangeStrategy": "pin"
    },
    {
      "matchDepPatterns": ["^terraform$"],
      "groupName": "terraform"
    },
    {
      "matchManagers": ["maven"],
      "matchDepPatterns": ["^com.google.auto.value"],
      "groupName": "com.google.auto.value packages"
    },
    {
      "matchDatasources": ["terraform"],
      "matchDepPatterns": ["^google"],
      "groupName": "google"
    },
    {
      "matchManagers": ["terraform"],
      "matchDepPatterns": ["^google"],
      "groupName": "google"
    },
    {
      "matchDatasources": ["pypi"],
      "matchDepPatterns": ["^fsspec$", "^gcsfs$"],
      "groupName": "gcsfs"
    },
    {
      "matchDatasources": ["pypi"],
      "matchDepPatterns": ["^grpcio"],
      "groupName": "grpcio"
    },
    {
      "matchDatasources": ["pypi"],
      "matchDepPatterns": ["^mkl$", "^intel-openmp$"],
      "groupName": "mkl"
    },
    {
      "matchDatasources": ["pypi"],
      "matchDepPatterns": ["^torch$", "^torchaudio$"],
      "groupName": "pytorch"
    },
    {
      "matchDatasources": ["pypi"],
      "matchDepPatterns": ["^sanic$", "^sanic-testing$"],
      "groupName": "sanic"
    }
  ],
  "regexManagers": [
    {
      "description": "Update _VERSION variables in Dockerfiles",
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile\\.[^/]*$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>.+?)(?: versioning=(?<versioning>[a-z-]+?))?\\s(?:ENV|ARG) .+?_VERSION=(?<currentValue>.+?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "description": "Update python dependencies in .pre-commit-config.yaml additional_dependencies",
      "fileMatch": [
        "^.pre-commit-config.yaml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>pypi) depName=(?<depName>.+?)(?: versioning=(?<versioning>[a-z-]+?))?\\s+- .+==(?<currentValue>.+?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    }
  ],
  "prConcurrentLimit": 0,
  "prCreation": "immediate",
  "prHourlyLimit": 0,
  "pruneStaleBranches": true,
  "rangeStrategy": "pin",
  "rollbackPrs": true,
  "semanticCommits": true,
  "semanticCommitType": "chore",
  "separateMajorMinor": true,
  "separateMinorPatch": true,
  "separateMultipleMajor": true,
  "unpublishSafe": true,
  "updateNotScheduled": true
}
